{"version":3,"sources":["Pages/ProductList/Blocks/styles.js","Pages/ProductList/Blocks/Card.jsx","Pages/ProductList/index.jsx","Pages/Cart/Blocks/Card.jsx","Pages/Cart/index.js","Pages/Components/Header.jsx","Pages/App.js","serviceWorker.js","index.js"],"names":["TextBold","styled","div","Meta","CardComponent","Card","props","el","useState","isFlipped","changeFlipped","onChangeFlipped","flipDirection","hoverable","style","styles","cardStyle","cover","alt","name","src","image","imageStyle","onClick","to","title","description","price","width","cursor","height","objectFit","data","id","ProductList","justify","map","card","element","span","key","increase","decrease","actions","type","disabled","quantity","Paragraph","Typography","dataCart","Cart","totalCart","changeTotal","renderCards","item","result","Object","assign","increaseValue","decreaseValue","totatStyle","DollarCircleOutlined","array","value","forEach","getTotalValue","margin","HeaderComponent","history","useHistory","ghost","onBack","push","backIcon","HomeOutlined","className","extra","shape","ShoppingCartOutlined","Footer","Layout","Content","layoutStyle","minHeight","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc84912f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TextBold = styled.div `\r\n    font-weight: bold;\r\n    background: black;\r\n    color: white;\r\n`;","import React, { useState } from \"react\";\r\nimport {Button, Card as CardComponent} from 'antd';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextBold } from \"./styles\";\r\n\r\nconst { Meta } = CardComponent;\r\n\r\nexport const Card = (props) => {\r\n    const { el } = props;\r\n    const [isFlipped, changeFlipped] = useState(false);\r\n    const onChangeFlipped = () => {\r\n        changeFlipped( !isFlipped );\r\n    };\r\n\r\n    return (\r\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"vertical\">\r\n            <CardComponent\r\n                hoverable\r\n                style={ styles.cardStyle }\r\n                cover={\r\n                    <img alt={ el.name } src={ el.image }\r\n                         style={ styles.imageStyle }/>\r\n                }\r\n                onClick={ onChangeFlipped }\r\n            >\r\n                <Link to=\"/cart\">\r\n                    <Meta\r\n                        title={ el.name }\r\n                        description={ `Price: ${el.price}` }\r\n                    />\r\n                </Link>\r\n            </CardComponent>\r\n            <CardComponent\r\n                hoverable\r\n                style={ styles.cardStyle }\r\n                cover={\r\n                    <img alt={ el.name } src={ el.image }\r\n                         style={ styles.imageStyle }/>\r\n                }\r\n                onClick={ onChangeFlipped }\r\n            >\r\n                <Link to=\"/cart\">\r\n                    <Meta\r\n                        title=\"Back Side\"\r\n                        description={ <TextBold>Hello</TextBold> }\r\n                    />\r\n                </Link>\r\n            </CardComponent>\r\n        </ReactCardFlip>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    cardStyle: {\r\n        width: 240,\r\n        cursor: 'pointer',\r\n    },\r\n    imageStyle: {\r\n        height: 240,\r\n        objectFit: 'contain'\r\n    }\r\n};","import React from \"react\";\r\nimport { Row, Col } from 'antd';\r\nimport { Card } from './Blocks';\r\n\r\nconst data = [\r\n    {\r\n        id: 11,\r\n        name: \"шарик\",\r\n        image: \"https://heroeswm-uvz.at.ua/imgs/katalog_statey/tumblr_m07iyfLy0F1qce1ag.jpg\",\r\n        price: 100,\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"футболка\",\r\n        image: \"https://i.pinimg.com/originals/da/8b/d1/da8bd1d87e3e7c8d708571515fdc2725.jpg\",\r\n        price: 120,\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"шарик 2\",\r\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\",\r\n        price: 102,\r\n    }\r\n];\r\n\r\nexport const ProductList = (el) => {\r\n  const renderCards = (element) => {\r\n      return (\r\n          <Col span={4} key={element.id}>\r\n              <Card el={element} />\r\n          </Col>\r\n      );\r\n  };\r\n  return (\r\n      <Row justify=\"space-around\">\r\n          { data.map(card => renderCards(card)) }\r\n      </Row>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport {Button, Card as CardComponent} from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = CardComponent;\r\n\r\nexport const Card = (props) => {\r\n    const { el, increase, decrease } = props;\r\n\r\n    return (\r\n        <Link to=\"/cart\">\r\n            <CardComponent\r\n                hoverable\r\n                style={ styles.cardStyle }\r\n                cover={\r\n                    <img alt={ el.name } src={ el.image }\r\n                         style={ styles.imageStyle }/>\r\n                }\r\n                actions={[\r\n                    <Button onClick={ decrease }>-</Button>,\r\n                    <Button type=\"link\" disabled style={{\r\n                        cursor: 'default'\r\n                    }}>{ el.quantity }</Button>,\r\n                    <Button onClick={ increase }>+</Button>,\r\n                ]}\r\n            >\r\n\r\n                    <Meta\r\n                        title={ el.name }\r\n                        description={ `Price: ${el.price}` }\r\n                    />\r\n            </CardComponent>\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    cardStyle: {\r\n        width: 240,\r\n        cursor: 'pointer',\r\n    },\r\n    imageStyle: {\r\n        height: 240,\r\n        objectFit: 'contain'\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport { Row, Col, Typography } from 'antd';\r\nimport { DollarCircleOutlined } from '@ant-design/icons';\r\nimport { Card } from \"./Blocks\";\r\nconst { Paragraph } = Typography;\r\n\r\nconst dataCart = [\r\n    {\r\n        id: 11,\r\n        name: \"шарик\",\r\n        image: \"https://heroeswm-uvz.at.ua/imgs/katalog_statey/tumblr_m07iyfLy0F1qce1ag.jpg\",\r\n        price: 100,\r\n        quantity: 1,\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"футболка\",\r\n        image: \"https://i.pinimg.com/originals/da/8b/d1/da8bd1d87e3e7c8d708571515fdc2725.jpg\",\r\n        price: 120,\r\n        quantity: 2,\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"шарик 2\",\r\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\",\r\n        price: 102,\r\n        quantity: 4,\r\n    }\r\n];\r\n\r\nexport const Cart = ({ el }) => {\r\n    const [totalCart, changeTotal] = useState(dataCart);\r\n    const increaseValue = (el) => {\r\n        changeTotal(totalCart.map(item => {\r\n            if (el.id !== item.id) return item;\r\n\r\n            const result = Object.assign({}, item);\r\n            result.quantity = 1 + item.quantity;\r\n            return result;\r\n        }));\r\n    };\r\n    const decreaseValue = (el) => {\r\n        changeTotal(totalCart.map(item => {\r\n            if (el.id !== item.id) return item;\r\n\r\n            const result = Object.assign({}, item);\r\n            result.quantity = item.quantity - 1;\r\n            return result;\r\n        }));\r\n    };\r\n    const renderCards = (element) => {\r\n        const result = (element.quantity) ? (\r\n            <Col span={4} key={element.id}>\r\n                <Card\r\n                    el={ element }\r\n                    increase={ () => increaseValue(element) }\r\n                    decrease={ () => decreaseValue(element) }\r\n                />\r\n            </Col>\r\n        ) : null;\r\n        return result;\r\n    };\r\n\r\n    const getTotalValue = (array) => {\r\n        let value = 0;\r\n        array.forEach((item) => {\r\n            const { price, quantity } = item;\r\n            value += (price * quantity);\r\n        });\r\n        return value;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"space-around\">\r\n                { totalCart.map(el => renderCards(el)) }\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col span={4}>\r\n                    <Paragraph style={ style.totatStyle } >\r\n                        <DollarCircleOutlined />\r\n                        &nbsp;Total:&nbsp;\r\n                        <span>{ getTotalValue(totalCart) }</span>\r\n                    </Paragraph>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst style = {\r\n    totatStyle: {\r\n        margin: '16px auto'\r\n    }\r\n};","import React from \"react\";\r\nimport { PageHeader, Button } from 'antd';\r\nimport { ShoppingCartOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const HeaderComponent = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <PageHeader\r\n            ghost={ false }\r\n            onBack={() => {\r\n                history.push(\"/\");\r\n            }}\r\n            title=\"Shop Awesome\"\r\n            backIcon={ <HomeOutlined key=\"home-icon\" /> }\r\n            className=\"site-page-header\"\r\n            extra={\r\n                [\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"circle\"\r\n                        onClick={() => {\r\n                            history.push(\"/cart\");\r\n                        }}\r\n                    >\r\n                        <ShoppingCartOutlined key=\"cart-icon\" />\r\n                    </Button>,\r\n                ]\r\n            }\r\n        >\r\n        </PageHeader>\r\n    );\r\n};","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { Layout } from 'antd';\nimport { ProductList } from 'Pages/ProductList';\nimport { Cart } from 'Pages/Cart';\nimport { HeaderComponent } from 'Pages/Components';\n\nconst { Footer, Content } = Layout;\n\nfunction App() {\n  return (\n      <Router>\n          <Switch>\n              <Layout style={styles.layoutStyle}>\n                  <HeaderComponent />\n                  <Content>\n                      <Route path=\"/\" component={ ProductList } exact/>\n                      <Route path=\"/cart\" component={ Cart } />\n                  </Content>\n                  <Footer>Footer</Footer>\n              </Layout>\n          </Switch>\n      </Router>\n  );\n}\n\nconst styles = {\n    layoutStyle: {\n        minHeight: '100vh',\n    }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}